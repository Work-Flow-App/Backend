name: CI - Build Spring Boot App

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4

#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '21'
#          cache: maven
#
#      - name: Build Spring Boot app
#        run: ./mvnw clean package -DskipTests
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 3️⃣ Set up Docker buildx (for caching layers)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Build and push Docker image with caching
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/work-flow-dev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false


#      - name: Build Docker image
#        run: |
#          IMAGE_NAME=work-flow-dev
#          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
#          docker build -t $IMAGE_NAME:${{ github.sha }} .
#          docker tag $IMAGE_NAME:${{ github.sha }} $ECR_URI:latest
#
#      - name: Push Docker image to ECR
#        run: |
#          IMAGE_NAME=work-flow-dev
#          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
#          docker push $ECR_URI:latest
